---
name: plan
on:
  workflow_call:
    inputs:
      targets:
        required: true
        type: string
      ref:
        required: true
        type: string
    secrets:
      gh_app_id:
        required: true
      gh_app_private_key:
        required: true
      TFE_TOKEN:
        # CHECK: Please remove this if you don't use Hashicorp Cloud Backend.
        required: true

jobs:
  plan:
    timeout-minutes: 30
    name: "plan (${{matrix.target.target}})"
    runs-on: ${{matrix.target.runs_on}}
    permissions:
      id-token: write # For OIDC
      contents: read # To checkout private repositories
    env:
      TFACTION_TARGET: ${{matrix.target.target}}
      TFACTION_WORKING_DIR: ${{matrix.target.working_directory}}
      TFACTION_JOB_TYPE: ${{matrix.target.job_type}}
      GH_COMMENT_SHA1: ${{inputs.ref}}
      TFCMT_SHA: ${{inputs.ref}}
    strategy:
      fail-fast: true
      matrix:
        target: ${{fromJSON(inputs.targets)}}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{inputs.ref}}
          persist-credentials: false

      - name: Generate token (aqua)
        # CHECK: Maybe you can replace this with ${{github.token}}.
        # It's up to you.
        id: aqua_installer_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{secrets.gh_app_id}}
          private_key: ${{secrets.gh_app_private_key}}
          permissions: >-
            {
              "contents": "read"
            }
          repositories: >-
            [
              "${{github.event.repository.name}}"
            ]

      - uses: aquaproj/aqua-installer@f13c5d2f0357708d85477aabe50fd3f725528745 # v3.1.0
        with:
          aqua_version: v2.40.0
        env:
          AQUA_GITHUB_TOKEN: ${{steps.aqua_installer_token.outputs.token}}


      # - uses: suzuki-shunsuke/tfaction/export-secrets@v1.12.0
      #   with:
      #     # If this action doesn't export secrets as you expect, please check if secrets are passed to this action properly.
      #     # If you use reusable workflows, maybe secrets aren't passed to the reusable workflow.
      #     # If so, please pass secrets properly.
      #     #
      #     # - https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-inputs-and-secrets-to-a-reusable-workflow
      #     # - https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idsecrets
      #     secrets: ${{secrets.secrets}}
      - name: Generate token to download private Terraform Modules
        # CHECK: You can remove this step if you don't use private modules
        id: gh_setup_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.gh_app_id }}
          private_key: ${{ secrets.gh_app_private_key }}
          # If you use private registries, contents:read is required
          permissions: >-
            {
              "contents": "read"
            }
          # CHECK: Private repositories hosting private modules. Please fix this properly.
          repositories: >-
            [
              "${{github.event.repository.name}}"
            ]

      - name: Set up git to checkout private Terraform Modules
        run: gh auth setup-git
        # CHECK: This is required to download private modules in `terraform init`
        # You can remove this step if you don't use private modules
        env:
          GITHUB_TOKEN: ${{steps.gh_setup_token.outputs.token}}

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{secrets.gh_app_id}}
          private_key: ${{secrets.gh_app_private_key}}
          # issues:write - Create labels
          # pull_requests:write - Post comments and set labels
          # contents:write - Push commits
          permissions: >-
            {
              "pull_requests": "write",
              "issues": "write",
              "contents": "write"
            }
          repositories: >-
            ["${{github.event.repository.name}}"]

      - name: Check if the directory is locked
        # CHECK: This step is optional. If you don't want lock mechanism, please remove them.
        uses: suzuki-shunsuke/lock-action@c610af3122da5e5b3cfa5ddfd580f037c7b529f3 # v0.1.5
        id: check-lock
        with:
          mode: check # CHECK: If you want to acquire lock, please check this to `lock`
          key: ${{env.TFACTION_WORKING_DIR}}
      - name: Post the error message
        # CHECK: This step is optional. If you don't want lock mechanism, please remove them.
        run: |
          github-comment post \
            -k already-locked \
            -var "actor:$ACTOR" \
            -var "message:$MESSAGE" \
            -var "workflow_url:$WORKFLOW_URL" \
            -var "datetime:$DATETIME" \
            -var "tfaction_target:${TFACTION_TARGET}"
          exit 1
        if: steps.check-lock.outputs.already_locked == 'true'
        env:
          RESULT: ${{steps.check-lock.outputs.result}}
          ACTOR: ${{fromJSON(steps.check-lock.outputs.result).actor}}
          MESSAGE: ${{fromJSON(steps.check-lock.outputs.result).message}}
          WORKFLOW_URL: ${{fromJSON(steps.check-lock.outputs.result).github_actions_workflow_run_url}}
          DATETIME: ${{fromJSON(steps.check-lock.outputs.result).datetime}}
          GITHUB_TOKEN: ${{steps.generate_token.outputs.token}}

      - name: Set up
        uses: suzuki-shunsuke/tfaction/setup@f56d1ae7fd22841f64c1c092148bc55bcb1f24d4 # v1.13.4
        with:
          github_token: ${{steps.generate_token.outputs.token}}
        env:
          GITHUB_TOKEN: ${{steps.generate_token.outputs.token}} # CHECK: For GitHub Provider. You can remove this if you don't use GitHub Provider.
          TF_TOKEN_app_terraform_io: ${{secrets.TFE_TOKEN}} # CHECK: For Hashicorp Cloud Backend. Please remove this if you don't use Hashicorp Cloud Backend.

      - uses: suzuki-shunsuke/tfaction/get-target-config@f56d1ae7fd22841f64c1c092148bc55bcb1f24d4 # v1.13.4
        # CHECK: You can remove this step if you don't want to validate Terraform Providers
        id: target-config
      - name: Generate token (pull request write)
        # CHECK: You can remove this step if you don't want to validate Terraform Providers
        id: pull_request_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{secrets.gh_app_id}}
          private_key: ${{secrets.gh_app_private_key}}
          permissions: >-
            {
              "pull_requests": "write"
            }
          repositories: >-
            ["${{github.event.repository.name}}"]
      - name: Validate if disallowed Terraform Providers are used
        # CHECK: You can remove this step if you don't want to validate Terraform Providers
        run: |
          set -euo pipefail
          tfprovidercheck -v
          github-comment exec -- terraform version -json | github-comment exec -- tfprovidercheck
        working-directory: ${{ steps.target-config.outputs.working_directory }}
        env:
          # CHECK: Please modify the provider list.
          TFPROVIDERCHECK_CONFIG_BODY: |
            providers:
              - name: registry.terraform.io/hashicorp/aws
              - name: registry.terraform.io/hashicorp/google
              - name: registry.terraform.io/hashicorp/null
              - name: registry.terraform.io/hashicorp/tls
              - name: registry.terraform.io/integrations/github
              - name: registry.terraform.io/hashicorp/tfe
          GITHUB_TOKEN: ${{steps.pull_request_token.outputs.token}} # For github-comment

      - name: Test
        uses: suzuki-shunsuke/tfaction/test@f56d1ae7fd22841f64c1c092148bc55bcb1f24d4 # v1.13.4
        with:
          github_token: ${{steps.generate_token.outputs.token}}
        env:
          GITHUB_TOKEN: ${{steps.generate_token.outputs.token}} # For GitHub Provider and reviewdog and github-comment

      - name: Plan
        uses: suzuki-shunsuke/tfaction/plan@f56d1ae7fd22841f64c1c092148bc55bcb1f24d4 # v1.13.4
        with:
          github_token: ${{steps.generate_token.outputs.token}}
        env:
          GITHUB_TOKEN: ${{steps.generate_token.outputs.token}} # For GitHub Provider and tfcmt and github-comment
          TF_TOKEN_app_terraform_io: ${{secrets.TFE_TOKEN}} # CHECK: For Hashicorp Cloud Backend. Please remove this if you don't use Hashicorp Cloud Backend.
          TFE_TOKEN: ${{secrets.TFE_TOKEN}} # CHECK: For tfe provider. Please remove this if you don't use Hashicorp Cloud Backend.
